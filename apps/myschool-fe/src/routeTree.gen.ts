/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as HomeRouteImport } from './routes/_home'
import { Route as AuthRouteImport } from './routes/_auth'
import { Route as HomeIndexRouteImport } from './routes/_home/index'
import { Route as HomeStudentsRouteImport } from './routes/_home/students'
import { Route as HomeCoursesRouteImport } from './routes/_home/courses'
import { Route as HomeAboutRouteImport } from './routes/_home/about'
import { Route as AuthSignupRouteImport } from './routes/_auth/signup'
import { Route as AuthLoginRouteImport } from './routes/_auth/login'
import { Route as HomeStudentIdRouteImport } from './routes/_home/student/$id'
import { Route as HomeCourseIdRouteImport } from './routes/_home/course/$id'

const HomeRoute = HomeRouteImport.update({
  id: '/_home',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthRoute = AuthRouteImport.update({
  id: '/_auth',
  getParentRoute: () => rootRouteImport,
} as any)
const HomeIndexRoute = HomeIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => HomeRoute,
} as any)
const HomeStudentsRoute = HomeStudentsRouteImport.update({
  id: '/students',
  path: '/students',
  getParentRoute: () => HomeRoute,
} as any)
const HomeCoursesRoute = HomeCoursesRouteImport.update({
  id: '/courses',
  path: '/courses',
  getParentRoute: () => HomeRoute,
} as any)
const HomeAboutRoute = HomeAboutRouteImport.update({
  id: '/about',
  path: '/about',
  getParentRoute: () => HomeRoute,
} as any)
const AuthSignupRoute = AuthSignupRouteImport.update({
  id: '/signup',
  path: '/signup',
  getParentRoute: () => AuthRoute,
} as any)
const AuthLoginRoute = AuthLoginRouteImport.update({
  id: '/login',
  path: '/login',
  getParentRoute: () => AuthRoute,
} as any)
const HomeStudentIdRoute = HomeStudentIdRouteImport.update({
  id: '/student/$id',
  path: '/student/$id',
  getParentRoute: () => HomeRoute,
} as any)
const HomeCourseIdRoute = HomeCourseIdRouteImport.update({
  id: '/course/$id',
  path: '/course/$id',
  getParentRoute: () => HomeRoute,
} as any)

export interface FileRoutesByFullPath {
  '/login': typeof AuthLoginRoute
  '/signup': typeof AuthSignupRoute
  '/about': typeof HomeAboutRoute
  '/courses': typeof HomeCoursesRoute
  '/students': typeof HomeStudentsRoute
  '/': typeof HomeIndexRoute
  '/course/$id': typeof HomeCourseIdRoute
  '/student/$id': typeof HomeStudentIdRoute
}
export interface FileRoutesByTo {
  '/login': typeof AuthLoginRoute
  '/signup': typeof AuthSignupRoute
  '/about': typeof HomeAboutRoute
  '/courses': typeof HomeCoursesRoute
  '/students': typeof HomeStudentsRoute
  '/': typeof HomeIndexRoute
  '/course/$id': typeof HomeCourseIdRoute
  '/student/$id': typeof HomeStudentIdRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/_auth': typeof AuthRouteWithChildren
  '/_home': typeof HomeRouteWithChildren
  '/_auth/login': typeof AuthLoginRoute
  '/_auth/signup': typeof AuthSignupRoute
  '/_home/about': typeof HomeAboutRoute
  '/_home/courses': typeof HomeCoursesRoute
  '/_home/students': typeof HomeStudentsRoute
  '/_home/': typeof HomeIndexRoute
  '/_home/course/$id': typeof HomeCourseIdRoute
  '/_home/student/$id': typeof HomeStudentIdRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/login'
    | '/signup'
    | '/about'
    | '/courses'
    | '/students'
    | '/'
    | '/course/$id'
    | '/student/$id'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/login'
    | '/signup'
    | '/about'
    | '/courses'
    | '/students'
    | '/'
    | '/course/$id'
    | '/student/$id'
  id:
    | '__root__'
    | '/_auth'
    | '/_home'
    | '/_auth/login'
    | '/_auth/signup'
    | '/_home/about'
    | '/_home/courses'
    | '/_home/students'
    | '/_home/'
    | '/_home/course/$id'
    | '/_home/student/$id'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  AuthRoute: typeof AuthRouteWithChildren
  HomeRoute: typeof HomeRouteWithChildren
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_home': {
      id: '/_home'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof HomeRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_auth': {
      id: '/_auth'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_home/': {
      id: '/_home/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof HomeIndexRouteImport
      parentRoute: typeof HomeRoute
    }
    '/_home/students': {
      id: '/_home/students'
      path: '/students'
      fullPath: '/students'
      preLoaderRoute: typeof HomeStudentsRouteImport
      parentRoute: typeof HomeRoute
    }
    '/_home/courses': {
      id: '/_home/courses'
      path: '/courses'
      fullPath: '/courses'
      preLoaderRoute: typeof HomeCoursesRouteImport
      parentRoute: typeof HomeRoute
    }
    '/_home/about': {
      id: '/_home/about'
      path: '/about'
      fullPath: '/about'
      preLoaderRoute: typeof HomeAboutRouteImport
      parentRoute: typeof HomeRoute
    }
    '/_auth/signup': {
      id: '/_auth/signup'
      path: '/signup'
      fullPath: '/signup'
      preLoaderRoute: typeof AuthSignupRouteImport
      parentRoute: typeof AuthRoute
    }
    '/_auth/login': {
      id: '/_auth/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof AuthLoginRouteImport
      parentRoute: typeof AuthRoute
    }
    '/_home/student/$id': {
      id: '/_home/student/$id'
      path: '/student/$id'
      fullPath: '/student/$id'
      preLoaderRoute: typeof HomeStudentIdRouteImport
      parentRoute: typeof HomeRoute
    }
    '/_home/course/$id': {
      id: '/_home/course/$id'
      path: '/course/$id'
      fullPath: '/course/$id'
      preLoaderRoute: typeof HomeCourseIdRouteImport
      parentRoute: typeof HomeRoute
    }
  }
}

interface AuthRouteChildren {
  AuthLoginRoute: typeof AuthLoginRoute
  AuthSignupRoute: typeof AuthSignupRoute
}

const AuthRouteChildren: AuthRouteChildren = {
  AuthLoginRoute: AuthLoginRoute,
  AuthSignupRoute: AuthSignupRoute,
}

const AuthRouteWithChildren = AuthRoute._addFileChildren(AuthRouteChildren)

interface HomeRouteChildren {
  HomeAboutRoute: typeof HomeAboutRoute
  HomeCoursesRoute: typeof HomeCoursesRoute
  HomeStudentsRoute: typeof HomeStudentsRoute
  HomeIndexRoute: typeof HomeIndexRoute
  HomeCourseIdRoute: typeof HomeCourseIdRoute
  HomeStudentIdRoute: typeof HomeStudentIdRoute
}

const HomeRouteChildren: HomeRouteChildren = {
  HomeAboutRoute: HomeAboutRoute,
  HomeCoursesRoute: HomeCoursesRoute,
  HomeStudentsRoute: HomeStudentsRoute,
  HomeIndexRoute: HomeIndexRoute,
  HomeCourseIdRoute: HomeCourseIdRoute,
  HomeStudentIdRoute: HomeStudentIdRoute,
}

const HomeRouteWithChildren = HomeRoute._addFileChildren(HomeRouteChildren)

const rootRouteChildren: RootRouteChildren = {
  AuthRoute: AuthRouteWithChildren,
  HomeRoute: HomeRouteWithChildren,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
